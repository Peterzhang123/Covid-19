{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\peter\\\\Desktop\\\\lfz\\\\covid_tracker\\\\src\\\\Components\\\\utilies.js\";\nimport React from 'react';\nimport numeral from \"numeral\";\nimport { Circle, Popup } from 'react-leaflet';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst casesTypeColors = {\n  cases: {\n    hex: \"#CC1034\",\n    rgb: \"rgb(204, 16, 52)\",\n    half_op: \"rgba(204, 16, 52, 0.5)\",\n    multiplier: 400\n  },\n  recovered: {\n    hex: \"greenyellow\",\n    rgb: \"rgb(125, 215, 29)\",\n    half_op: \"rgba(125, 215, 29, 0.5)\",\n    multiplier: 400\n  },\n  deaths: {\n    hex: \"#fb4443\",\n    rgb: \"rgb(251, 68, 67)\",\n    half_op: \"rgba(251, 68, 67, 0.5)\",\n    multiplier: 600\n  }\n};\nexport const sortData = data => {\n  const sortedData = [...data];\n  return sortedData.sort((a, b) => a.cases > b.cases ? -1 : 1); // {\n  //   if(a.cases > b.cases){\n  //     return -1;\n  //   }else{\n  //     return 1;\n  //   }\n  // })\n  // return sortedData;\n};\nexport const ShowDataOnMap = (data, casesType = \"cases\") => data.map((country, i) => /*#__PURE__*/_jsxDEV(Circle, {\n  center: [country.countryInfo.lat, country.countryInfo.long],\n  pathOptions: {\n    color: casesTypeColors[casesType].hex,\n    fillColor: casesTypeColors[casesType].hex\n  },\n  radius: Math.sqrt(country[casesType]) * casesTypeColors[casesType].multiplier,\n  children: /*#__PURE__*/_jsxDEV(Popup, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"info-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info-flag\",\n        style: {\n          backgroundImage: `url(${country.countryInfo.flag})`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info-name\",\n        children: country.country\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info-confirmed\",\n        children: [\"Cases: \", numeral(country.cases).format(\"0,0\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info-recovered\",\n        children: [\"Recovered: \", numeral(country.recovered).format(\"0,0\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info-deaths\",\n        children: [\"Deaths: \", numeral(country.deaths).format(\"0,0\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 7\n  }, this)\n}, i, false, {\n  fileName: _jsxFileName,\n  lineNumber: 41,\n  columnNumber: 5\n}, this));\n_c = ShowDataOnMap;\nexport const prettyPrintStat = stat => stat ? `+${numeral(stat).format(\"0,0a\")}` : +\"0.0\";\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowDataOnMap\");","map":{"version":3,"sources":["C:/Users/peter/Desktop/lfz/covid_tracker/src/Components/utilies.js"],"names":["React","numeral","Circle","Popup","casesTypeColors","cases","hex","rgb","half_op","multiplier","recovered","deaths","sortData","data","sortedData","sort","a","b","ShowDataOnMap","casesType","map","country","i","countryInfo","lat","long","color","fillColor","Math","sqrt","backgroundImage","flag","format","prettyPrintStat","stat"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,eAA9B;;AAEA,MAAMC,eAAe,GAAG;AACtBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,GAAG,EAAE,SADA;AAELC,IAAAA,GAAG,EAAE,kBAFA;AAGLC,IAAAA,OAAO,EAAE,wBAHJ;AAILC,IAAAA,UAAU,EAAE;AAJP,GADe;AAOtBC,EAAAA,SAAS,EAAE;AACTJ,IAAAA,GAAG,EAAE,aADI;AAETC,IAAAA,GAAG,EAAE,mBAFI;AAGTC,IAAAA,OAAO,EAAE,yBAHA;AAITC,IAAAA,UAAU,EAAE;AAJH,GAPW;AAatBE,EAAAA,MAAM,EAAE;AACNL,IAAAA,GAAG,EAAE,SADC;AAENC,IAAAA,GAAG,EAAE,kBAFC;AAGNC,IAAAA,OAAO,EAAE,wBAHH;AAINC,IAAAA,UAAU,EAAE;AAJN;AAbc,CAAxB;AAqBA,OAAO,MAAMG,QAAQ,GAAIC,IAAD,IAAU;AAChC,QAAMC,UAAU,GAAG,CAAC,GAAGD,IAAJ,CAAnB;AACA,SAAOC,UAAU,CAACC,IAAX,CAAgB,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACX,KAAF,GAAUY,CAAC,CAACZ,KAAZ,GAAoB,CAAC,CAArB,GAAyB,CAAnD,CAAP,CAFgC,CAGhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,CAXM;AAaP,OAAO,MAAMa,aAAa,GAAG,CAACL,IAAD,EAAOM,SAAS,GAAG,OAAnB,KAC3BN,IAAI,CAACO,GAAL,CAAS,CAACC,OAAD,EAAUC,CAAV,kBACP,QAAC,MAAD;AACE,EAAA,MAAM,EAAE,CAACD,OAAO,CAACE,WAAR,CAAoBC,GAArB,EAA0BH,OAAO,CAACE,WAAR,CAAoBE,IAA9C,CADV;AAEE,EAAA,WAAW,EAAE;AACXC,IAAAA,KAAK,EAAEtB,eAAe,CAACe,SAAD,CAAf,CAA2Bb,GADvB;AAEXqB,IAAAA,SAAS,EAAEvB,eAAe,CAACe,SAAD,CAAf,CAA2Bb;AAF3B,GAFf;AAME,EAAA,MAAM,EACJsB,IAAI,CAACC,IAAL,CAAUR,OAAO,CAACF,SAAD,CAAjB,IAAgCf,eAAe,CAACe,SAAD,CAAf,CAA2BV,UAP/D;AAAA,yBAUE,QAAC,KAAD;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BACE;AACE,QAAA,SAAS,EAAC,WADZ;AAEE,QAAA,KAAK,EAAE;AAAEqB,UAAAA,eAAe,EAAG,OAAMT,OAAO,CAACE,WAAR,CAAoBQ,IAAK;AAAnD;AAFT;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,kBAA4BV,OAAO,CAACA;AAApC;AAAA;AAAA;AAAA;AAAA,cALF,eAME;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,8BACUpB,OAAO,CAACoB,OAAO,CAAChB,KAAT,CAAP,CAAuB2B,MAAvB,CAA8B,KAA9B,CADV;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,eASE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,kCACc/B,OAAO,CAACoB,OAAO,CAACX,SAAT,CAAP,CAA2BsB,MAA3B,CAAkC,KAAlC,CADd;AAAA;AAAA;AAAA;AAAA;AAAA,cATF,eAYE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,+BACW/B,OAAO,CAACoB,OAAO,CAACV,MAAT,CAAP,CAAwBqB,MAAxB,CAA+B,KAA/B,CADX;AAAA;AAAA;AAAA;AAAA;AAAA,cAZF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAVF,GAAaV,CAAb;AAAA;AAAA;AAAA;AAAA,QADF,CADK;KAAMJ,a;AAkCb,OAAO,MAAMe,eAAe,GAAIC,IAAD,IAAUA,IAAI,GAAI,IAAGjC,OAAO,CAACiC,IAAD,CAAP,CAAcF,MAAd,CAAqB,MAArB,CAA6B,EAApC,GAAwC,CAAE,KAAhF","sourcesContent":["import React from 'react';\nimport numeral from \"numeral\";\nimport { Circle, Popup } from 'react-leaflet';\n\nconst casesTypeColors = {\n  cases: {\n    hex: \"#CC1034\",\n    rgb: \"rgb(204, 16, 52)\",\n    half_op: \"rgba(204, 16, 52, 0.5)\",\n    multiplier: 400,\n  },\n  recovered: {\n    hex: \"greenyellow\",\n    rgb: \"rgb(125, 215, 29)\",\n    half_op: \"rgba(125, 215, 29, 0.5)\",\n    multiplier: 400,\n  },\n  deaths: {\n    hex: \"#fb4443\",\n    rgb: \"rgb(251, 68, 67)\",\n    half_op: \"rgba(251, 68, 67, 0.5)\",\n    multiplier: 600,\n  },\n};\n\nexport const sortData = (data) => {\n  const sortedData = [...data];\n  return sortedData.sort((a, b) => a.cases > b.cases ? -1 : 1);\n  // {\n  //   if(a.cases > b.cases){\n  //     return -1;\n  //   }else{\n  //     return 1;\n  //   }\n  // })\n  // return sortedData;\n}\n\nexport const ShowDataOnMap = (data, casesType = \"cases\") =>\n  data.map((country, i) => (\n    <Circle key={i}\n      center={[country.countryInfo.lat, country.countryInfo.long]}\n      pathOptions={{\n        color: casesTypeColors[casesType].hex,\n        fillColor: casesTypeColors[casesType].hex\n      }}\n      radius={\n        Math.sqrt(country[casesType]) * casesTypeColors[casesType].multiplier\n      }\n    >\n      <Popup>\n        <div className=\"info-container\">\n          <div\n            className=\"info-flag\"\n            style={{ backgroundImage: `url(${country.countryInfo.flag})` }}\n          ></div>\n          <div className=\"info-name\">{country.country}</div>\n          <div className=\"info-confirmed\">\n            Cases: {numeral(country.cases).format(\"0,0\")}\n          </div>\n          <div className=\"info-recovered\">\n            Recovered: {numeral(country.recovered).format(\"0,0\")}\n          </div>\n          <div className=\"info-deaths\">\n            Deaths: {numeral(country.deaths).format(\"0,0\")}\n          </div>\n        </div>\n      </Popup>\n    </Circle>\n  )\n  )\n\nexport const prettyPrintStat = (stat) => stat ? `+${numeral(stat).format(\"0,0a\")}` : + \"0.0\";"]},"metadata":{},"sourceType":"module"}