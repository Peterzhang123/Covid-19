{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\peter\\\\Desktop\\\\lfz\\\\covid_tracker\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { FormControl, Select, MenuItem, Card, CardContent } from '@material-ui/core';\nimport { sortData, prettyPrintStat } from \"./Components/utilies\";\nimport numeral from \"numeral\";\nimport InfoBox from \"./Components/InfoBox/InfoBox\";\nimport LineGraph from \"./Components/LineGraph\";\nimport Map from \"./Components/CovidMap/CovidMap\";\nimport Table from \"./Components/Table/Table\";\nimport \"leaflet/dist/leaflet.css\";\nimport \"./index.css\";\nimport \"./Components/Table/Table.css\";\nimport \"./Components/Modal/Modal.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [countries, setCountries] = useState([]);\n  const [country, setCountry] = useState(\"WorldWide\");\n  const [countryInfo, setCountryInfo] = useState([]);\n  const [tableData, setTableData] = useState([]);\n  const [center, setCenter] = useState([40.4, -3.7]);\n  const [zoom, setZoom] = useState(3);\n  const [mapCountries, setMapCountries] = useState([]);\n  const [casesType, setCasesType] = useState(`cases`);\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/all\").then(res => res.json()).then(data => {\n      setCountryInfo(data);\n    });\n  }, []);\n  useEffect(() => {\n    const getCountriesData = async () => {\n      await fetch(\"http://disease.sh/v3/covid-19/countries\").then(res => res.json()).then(data => {\n        const apiCountries = data.map(c => ({\n          name: c.country,\n          value: c.countryInfo.iso2\n        }));\n        const sortedData = sortData(data);\n        setTableData(sortedData);\n        setCountries(apiCountries);\n        setMapCountries(data);\n      });\n    };\n\n    getCountriesData();\n  }, []);\n\n  const onCountryChange = async event => {\n    const countryCode = event.target.value;\n    setCountry(countryCode);\n    const url = countryCode === \"WorldWide\" ? `https://disease.sh/v3/covid-19/all` : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n    await fetch(url).then(res => res.json()).then(data => {\n      setCountry(countryCode);\n      setCountryInfo(data);\n\n      if (countryCode === \"WorldWide\") {\n        setZoom(3);\n        setCenter([40.4, -3.7]);\n      } else {\n        setZoom(8);\n        setCenter([data.countryInfo.lat, data.countryInfo.long]);\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left_app\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app_header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Covid-19 Tracker\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          className: \"app_dropdown\",\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            variant: \"outlined\",\n            value: country,\n            onChange: onCountryChange,\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"WorldWide\",\n              children: \"WorldWide\"\n            }, \"w\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this), countries.map((v, i) => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: v.value,\n              children: v.name\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app_stats\",\n        children: [/*#__PURE__*/_jsxDEV(InfoBox, {\n          isRed: true,\n          active: casesType === \"cases\",\n          onClick: e => setCasesType('cases'),\n          title: \"Coronavirus Cases\",\n          cases: prettyPrintStat(countryInfo.todayCases),\n          total: numeral(countryInfo.cases).format(0.0)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InfoBox, {\n          active: casesType === \"recovered\",\n          onClick: e => setCasesType('recovered'),\n          title: \"Recovered\",\n          cases: prettyPrintStat(countryInfo.todayRecovered),\n          total: numeral(countryInfo.recovered).format(0.0)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InfoBox, {\n          isRed: true,\n          active: casesType === \"deaths\",\n          onClick: e => setCasesType('deaths'),\n          title: \"Deaths\",\n          cases: prettyPrintStat(countryInfo.todayDeaths),\n          total: numeral(countryInfo.deaths).format(0.0)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Map, {\n          countries: mapCountries,\n          casesType: casesType,\n          center: center,\n          zoom: zoom\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"right_app\",\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Live Cases by Country\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"table\",\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            countries: tableData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"newCase\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [country, \" \", casesType.charAt(0).toUpperCase() + casesType.slice(1), \" Report\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(LineGraph, {\n            casesType: casesType,\n            countryCode: country\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"lHWNFthXUE8CjAkfZs1xsYYD/GE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/peter/Desktop/lfz/covid_tracker/src/App.js"],"names":["React","useState","useEffect","FormControl","Select","MenuItem","Card","CardContent","sortData","prettyPrintStat","numeral","InfoBox","LineGraph","Map","Table","App","countries","setCountries","country","setCountry","countryInfo","setCountryInfo","tableData","setTableData","center","setCenter","zoom","setZoom","mapCountries","setMapCountries","casesType","setCasesType","fetch","then","res","json","data","getCountriesData","apiCountries","map","c","name","value","iso2","sortedData","onCountryChange","event","countryCode","target","url","lat","long","v","i","e","todayCases","cases","format","todayRecovered","recovered","todayDeaths","deaths","charAt","toUpperCase","slice"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { FormControl, Select, MenuItem, Card, CardContent } from '@material-ui/core';\nimport { sortData, prettyPrintStat } from \"./Components/utilies\";\nimport numeral from \"numeral\";\nimport InfoBox from \"./Components/InfoBox/InfoBox\";\nimport LineGraph from \"./Components/LineGraph\";\nimport Map from \"./Components/CovidMap/CovidMap\";\nimport Table from \"./Components/Table/Table\";\nimport \"leaflet/dist/leaflet.css\";\nimport \"./index.css\";\nimport \"./Components/Table/Table.css\";\nimport \"./Components/Modal/Modal.css\"\n\n\nconst App = () => {\n\n  const [countries, setCountries] = useState([]);\n  const [country, setCountry] = useState(\"WorldWide\");\n  const [countryInfo, setCountryInfo] = useState([]);\n  const [tableData, setTableData] = useState([]);\n  const [center, setCenter] = useState([40.4, -3.7]);\n  const [zoom, setZoom] = useState(3);\n  const [mapCountries, setMapCountries] = useState([]);\n  const [casesType, setCasesType] = useState(`cases`);\n\n\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/all\")\n      .then((res) => res.json())\n      .then((data) => {\n        setCountryInfo(data);\n      })\n  }, []);\n\n  useEffect(() => {\n    const getCountriesData = async () => {\n      await fetch(\"http://disease.sh/v3/covid-19/countries\")\n        .then((res) => res.json())\n        .then((data) => {\n          const apiCountries = data.map((c) => (\n            {\n              name: c.country,\n              value: c.countryInfo.iso2\n            }\n          ))\n          const sortedData = sortData(data);\n          setTableData(sortedData);\n          setCountries(apiCountries);\n          setMapCountries(data);\n        })\n    }\n    getCountriesData();\n  }, []);\n\n  const onCountryChange = async (event) => {\n    const countryCode = event.target.value;\n    setCountry(countryCode);\n    const url = countryCode === \"WorldWide\"\n      ? `https://disease.sh/v3/covid-19/all`\n      : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n\n    await fetch(url)\n      .then(res => res.json())\n      .then(data => {\n        setCountry(countryCode);\n        setCountryInfo(data);\n        if (countryCode === \"WorldWide\") {\n          setZoom(3);\n          setCenter([40.4, -3.7]);\n        } else {\n          setZoom(8);\n          setCenter([data.countryInfo.lat, data.countryInfo.long]);\n\n        }\n      })\n  }\n  return (\n    <div className=\"App\">\n      <div className=\"left_app\">\n        <div className=\"app_header\">\n          <h1>Covid-19 Tracker</h1>\n          <FormControl className=\"app_dropdown\">\n            <Select variant=\"outlined\" value={country} onChange={onCountryChange}>\n              <MenuItem key={\"w\"} value=\"WorldWide\">WorldWide</MenuItem>\n              {\n                countries.map((v, i) => (\n                  <MenuItem key={i} value={v.value}>{v.name}</MenuItem>\n                ))\n              }\n\n            </Select>\n          </FormControl>\n        </div>\n        <div className=\"app_stats\">\n          <InfoBox\n            isRed\n            active={casesType === \"cases\"}\n            onClick={(e) => setCasesType('cases')}\n            title=\"Coronavirus Cases\" cases={prettyPrintStat(countryInfo.todayCases)} total={numeral(countryInfo.cases).format(0.0)} />\n          <InfoBox\n            active={casesType === \"recovered\"}\n            onClick={e => setCasesType('recovered')}\n            title=\"Recovered\" cases={prettyPrintStat(countryInfo.todayRecovered)} total={numeral(countryInfo.recovered).format(0.0)} />\n          <InfoBox\n            isRed\n            active={casesType === \"deaths\"}\n            onClick={e => setCasesType('deaths')}\n            title=\"Deaths\" cases={prettyPrintStat(countryInfo.todayDeaths)} total={numeral(countryInfo.deaths).format(0.0)} />\n        </div>\n        <div>\n          <Map\n            countries={mapCountries}\n            casesType={casesType}\n            center={center}\n            zoom={zoom}\n          />\n        </div>\n      </div>\n\n      <Card className=\"right_app\">\n        <CardContent>\n          <h3>Live Cases by Country</h3>\n          <div className=\"table\">\n            <Table countries={tableData} />\n          </div>\n          <div className=\"newCase\">\n            <h3>{country} {casesType.charAt(0).toUpperCase() + casesType.slice(1)} Report</h3>\n            <LineGraph casesType={casesType} countryCode={country} />\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}