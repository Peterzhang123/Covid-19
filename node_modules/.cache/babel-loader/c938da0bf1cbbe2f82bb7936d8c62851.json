{"ast":null,"code":"import _toConsumableArray from\"C:/Users/peter/Desktop/lfz/covid_tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import React from'react';import numeral from\"numeral\";import{Circle,Popup}from'react-leaflet';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var casesTypeColors={cases:{hex:\"#CC1034\",rgb:\"rgb(204, 16, 52)\",half_op:\"rgba(204, 16, 52, 0.5)\",multiplier:400},recovered:{hex:\"greenyellow\",rgb:\"rgb(125, 215, 29)\",half_op:\"rgba(125, 215, 29, 0.5)\",multiplier:400},deaths:{hex:\"#fb4443\",rgb:\"rgb(251, 68, 67)\",half_op:\"rgba(251, 68, 67, 0.5)\",multiplier:600}};export var sortData=function sortData(data){var sortedData=_toConsumableArray(data);return sortedData.sort(function(a,b){return a.cases>b.cases?-1:1;});// {\n//   if(a.cases > b.cases){\n//     return -1;\n//   }else{\n//     return 1;\n//   }\n// })\n// return sortedData;\n};export var ShowDataOnMap=function ShowDataOnMap(data){var casesType=arguments.length>1&&arguments[1]!==undefined?arguments[1]:\"cases\";return data.map(function(country,i){return/*#__PURE__*/_jsx(Circle,{center:[country.countryInfo.lat,country.countryInfo.long],pathOptions:{color:casesTypeColors[casesType].hex,fillColor:casesTypeColors[casesType].hex},radius:Math.sqrt(country[casesType])*casesTypeColors[casesType].multiplier,children:/*#__PURE__*/_jsx(Popup,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"info-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"info-flag\",style:{backgroundImage:\"url(\".concat(country.countryInfo.flag,\")\")}}),/*#__PURE__*/_jsx(\"div\",{className:\"info-name\",children:country.country}),/*#__PURE__*/_jsxs(\"div\",{className:\"info-confirmed\",children:[\"Cases: \",numeral(country.cases).format(\"0,0\")]}),/*#__PURE__*/_jsxs(\"div\",{className:\"info-recovered\",children:[\"Recovered: \",numeral(country.recovered).format(\"0,0\")]}),/*#__PURE__*/_jsxs(\"div\",{className:\"info-deaths\",children:[\"Deaths: \",numeral(country.deaths).format(\"0,0\")]})]})})},i);});};export var prettyPrintStat=function prettyPrintStat(stat){return stat?\"+\".concat(numeral(stat).format(\"0,0a\")):+\"0.0\";};","map":{"version":3,"sources":["C:/Users/peter/Desktop/lfz/covid_tracker/src/Components/utilies.js"],"names":["React","numeral","Circle","Popup","casesTypeColors","cases","hex","rgb","half_op","multiplier","recovered","deaths","sortData","data","sortedData","sort","a","b","ShowDataOnMap","casesType","map","country","i","countryInfo","lat","long","color","fillColor","Math","sqrt","backgroundImage","flag","format","prettyPrintStat","stat"],"mappings":"uKAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,OAAP,KAAoB,SAApB,CACA,OAASC,MAAT,CAAiBC,KAAjB,KAA8B,eAA9B,C,wFAEA,GAAMC,CAAAA,eAAe,CAAG,CACtBC,KAAK,CAAE,CACLC,GAAG,CAAE,SADA,CAELC,GAAG,CAAE,kBAFA,CAGLC,OAAO,CAAE,wBAHJ,CAILC,UAAU,CAAE,GAJP,CADe,CAOtBC,SAAS,CAAE,CACTJ,GAAG,CAAE,aADI,CAETC,GAAG,CAAE,mBAFI,CAGTC,OAAO,CAAE,yBAHA,CAITC,UAAU,CAAE,GAJH,CAPW,CAatBE,MAAM,CAAE,CACNL,GAAG,CAAE,SADC,CAENC,GAAG,CAAE,kBAFC,CAGNC,OAAO,CAAE,wBAHH,CAINC,UAAU,CAAE,GAJN,CAbc,CAAxB,CAqBA,MAAO,IAAMG,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,IAAD,CAAU,CAChC,GAAMC,CAAAA,UAAU,oBAAOD,IAAP,CAAhB,CACA,MAAOC,CAAAA,UAAU,CAACC,IAAX,CAAgB,SAACC,CAAD,CAAIC,CAAJ,QAAUD,CAAAA,CAAC,CAACX,KAAF,CAAUY,CAAC,CAACZ,KAAZ,CAAoB,CAAC,CAArB,CAAyB,CAAnC,EAAhB,CAAP,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,CAXM,CAaP,MAAO,IAAMa,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACL,IAAD,KAAOM,CAAAA,SAAP,2DAAmB,OAAnB,OAC3BN,CAAAA,IAAI,CAACO,GAAL,CAAS,SAACC,OAAD,CAAUC,CAAV,qBACP,KAAC,MAAD,EACE,MAAM,CAAE,CAACD,OAAO,CAACE,WAAR,CAAoBC,GAArB,CAA0BH,OAAO,CAACE,WAAR,CAAoBE,IAA9C,CADV,CAEE,WAAW,CAAE,CACXC,KAAK,CAAEtB,eAAe,CAACe,SAAD,CAAf,CAA2Bb,GADvB,CAEXqB,SAAS,CAAEvB,eAAe,CAACe,SAAD,CAAf,CAA2Bb,GAF3B,CAFf,CAME,MAAM,CACJsB,IAAI,CAACC,IAAL,CAAUR,OAAO,CAACF,SAAD,CAAjB,EAAgCf,eAAe,CAACe,SAAD,CAAf,CAA2BV,UAP/D,uBAUE,KAAC,KAAD,wBACE,aAAK,SAAS,CAAC,gBAAf,wBACE,YACE,SAAS,CAAC,WADZ,CAEE,KAAK,CAAE,CAAEqB,eAAe,eAAST,OAAO,CAACE,WAAR,CAAoBQ,IAA7B,KAAjB,CAFT,EADF,cAKE,YAAK,SAAS,CAAC,WAAf,UAA4BV,OAAO,CAACA,OAApC,EALF,cAME,aAAK,SAAS,CAAC,gBAAf,qBACUpB,OAAO,CAACoB,OAAO,CAAChB,KAAT,CAAP,CAAuB2B,MAAvB,CAA8B,KAA9B,CADV,GANF,cASE,aAAK,SAAS,CAAC,gBAAf,yBACc/B,OAAO,CAACoB,OAAO,CAACX,SAAT,CAAP,CAA2BsB,MAA3B,CAAkC,KAAlC,CADd,GATF,cAYE,aAAK,SAAS,CAAC,aAAf,sBACW/B,OAAO,CAACoB,OAAO,CAACV,MAAT,CAAP,CAAwBqB,MAAxB,CAA+B,KAA/B,CADX,GAZF,GADF,EAVF,EAAaV,CAAb,CADO,EAAT,CAD2B,EAAtB,CAkCP,MAAO,IAAMW,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,IAAD,QAAUA,CAAAA,IAAI,YAAOjC,OAAO,CAACiC,IAAD,CAAP,CAAcF,MAAd,CAAqB,MAArB,CAAP,EAAwC,CAAE,KAAxD,EAAxB","sourcesContent":["import React from 'react';\nimport numeral from \"numeral\";\nimport { Circle, Popup } from 'react-leaflet';\n\nconst casesTypeColors = {\n  cases: {\n    hex: \"#CC1034\",\n    rgb: \"rgb(204, 16, 52)\",\n    half_op: \"rgba(204, 16, 52, 0.5)\",\n    multiplier: 400,\n  },\n  recovered: {\n    hex: \"greenyellow\",\n    rgb: \"rgb(125, 215, 29)\",\n    half_op: \"rgba(125, 215, 29, 0.5)\",\n    multiplier: 400,\n  },\n  deaths: {\n    hex: \"#fb4443\",\n    rgb: \"rgb(251, 68, 67)\",\n    half_op: \"rgba(251, 68, 67, 0.5)\",\n    multiplier: 600,\n  },\n};\n\nexport const sortData = (data) => {\n  const sortedData = [...data];\n  return sortedData.sort((a, b) => a.cases > b.cases ? -1 : 1);\n  // {\n  //   if(a.cases > b.cases){\n  //     return -1;\n  //   }else{\n  //     return 1;\n  //   }\n  // })\n  // return sortedData;\n}\n\nexport const ShowDataOnMap = (data, casesType = \"cases\") =>\n  data.map((country, i) => (\n    <Circle key={i}\n      center={[country.countryInfo.lat, country.countryInfo.long]}\n      pathOptions={{\n        color: casesTypeColors[casesType].hex,\n        fillColor: casesTypeColors[casesType].hex\n      }}\n      radius={\n        Math.sqrt(country[casesType]) * casesTypeColors[casesType].multiplier\n      }\n    >\n      <Popup>\n        <div className=\"info-container\">\n          <div\n            className=\"info-flag\"\n            style={{ backgroundImage: `url(${country.countryInfo.flag})` }}\n          ></div>\n          <div className=\"info-name\">{country.country}</div>\n          <div className=\"info-confirmed\">\n            Cases: {numeral(country.cases).format(\"0,0\")}\n          </div>\n          <div className=\"info-recovered\">\n            Recovered: {numeral(country.recovered).format(\"0,0\")}\n          </div>\n          <div className=\"info-deaths\">\n            Deaths: {numeral(country.deaths).format(\"0,0\")}\n          </div>\n        </div>\n      </Popup>\n    </Circle>\n  )\n  )\n\nexport const prettyPrintStat = (stat) => stat ? `+${numeral(stat).format(\"0,0a\")}` : + \"0.0\";"]},"metadata":{},"sourceType":"module"}