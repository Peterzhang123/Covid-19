{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/peter/Desktop/lfz/covid_tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/peter/Desktop/lfz/covid_tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:/Users/peter/Desktop/lfz/covid_tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{FormControl,Select,MenuItem,Card,CardContent}from'@material-ui/core';import{sortData,prettyPrintStat}from\"./Components/utilies\";import numeral from\"numeral\";import InfoBox from\"./Components/InfoBox/InfoBox\";import LineGraph from\"./Components/LineGraph\";import Map from\"./Components/CovidMap/CovidMap\";import Table from\"./Components/Table/Table\";import\"leaflet/dist/leaflet.css\";import\"./index.css\";import\"./Components/Table/Table.css\";import\"./Components/Modal/Modal.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var App=function App(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),countries=_useState2[0],setCountries=_useState2[1];var _useState3=useState(\"WorldWide\"),_useState4=_slicedToArray(_useState3,2),country=_useState4[0],setCountry=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),countryInfo=_useState6[0],setCountryInfo=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),tableData=_useState8[0],setTableData=_useState8[1];var _useState9=useState([40.4,-3.7]),_useState10=_slicedToArray(_useState9,2),center=_useState10[0],setCenter=_useState10[1];var _useState11=useState(3),_useState12=_slicedToArray(_useState11,2),zoom=_useState12[0],setZoom=_useState12[1];var _useState13=useState([]),_useState14=_slicedToArray(_useState13,2),mapCountries=_useState14[0],setMapCountries=_useState14[1];var _useState15=useState(\"cases\"),_useState16=_slicedToArray(_useState15,2),casesType=_useState16[0],setCasesType=_useState16[1];useEffect(function(){fetch(\"https://disease.sh/v3/covid-19/all\").then(function(res){return res.json();}).then(function(data){setCountryInfo(data);});},[]);useEffect(function(){var getCountriesData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"http://disease.sh/v3/covid-19/countries\").then(function(res){return res.json();}).then(function(data){var apiCountries=data.map(function(c){return{name:c.country,value:c.countryInfo.iso2};});var sortedData=sortData(data);setTableData(sortedData);setCountries(apiCountries);setMapCountries(data);});case 2:case\"end\":return _context.stop();}}},_callee);}));return function getCountriesData(){return _ref.apply(this,arguments);};}();getCountriesData();},[]);var onCountryChange=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(event){var countryCode,url;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:countryCode=event.target.value;setCountry(countryCode);url=countryCode===\"WorldWide\"?\"https://disease.sh/v3/covid-19/all\":\"https://disease.sh/v3/covid-19/countries/\".concat(countryCode);_context2.next=5;return fetch(url).then(function(res){return res.json();}).then(function(data){setCountry(countryCode);setCountryInfo(data);if(countryCode===\"WorldWide\"){setZoom(3);setCenter([40.4,-3.7]);}else{setZoom(8);setCenter([data.countryInfo.lat,data.countryInfo.long]);}});case 5:case\"end\":return _context2.stop();}}},_callee2);}));return function onCountryChange(_x){return _ref2.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"left_app\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"app_header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Covid-19 Tracker\"}),/*#__PURE__*/_jsx(FormControl,{className:\"app_dropdown\",children:/*#__PURE__*/_jsxs(Select,{variant:\"outlined\",value:country,onChange:onCountryChange,children:[/*#__PURE__*/_jsx(MenuItem,{value:\"WorldWide\",children:\"WorldWide\"},\"w\"),countries.map(function(v,i){return/*#__PURE__*/_jsx(MenuItem,{value:v.value,children:v.name},i);})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"app_stats\",children:[/*#__PURE__*/_jsx(InfoBox,{isRed:true,active:casesType===\"cases\",onClick:function onClick(e){return setCasesType('cases');},title:\"Coronavirus Cases\",cases:prettyPrintStat(countryInfo.todayCases),total:numeral(countryInfo.cases).format(0.0)}),/*#__PURE__*/_jsx(InfoBox,{active:casesType===\"recovered\",onClick:function onClick(e){return setCasesType('recovered');},title:\"Recovered\",cases:prettyPrintStat(countryInfo.todayRecovered),total:numeral(countryInfo.recovered).format(0.0)}),/*#__PURE__*/_jsx(InfoBox,{isRed:true,active:casesType===\"deaths\",onClick:function onClick(e){return setCasesType('deaths');},title:\"Deaths\",cases:prettyPrintStat(countryInfo.todayDeaths),total:numeral(countryInfo.deaths).format(0.0)})]}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Map,{countries:mapCountries,casesType:casesType,center:center,zoom:zoom})})]}),/*#__PURE__*/_jsx(Card,{className:\"right_app\",children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Live Cases by Country\"}),/*#__PURE__*/_jsx(\"div\",{className:\"table\",children:/*#__PURE__*/_jsx(Table,{countries:tableData})}),/*#__PURE__*/_jsxs(\"div\",{className:\"newCase\",children:[/*#__PURE__*/_jsxs(\"h3\",{children:[country,\" \",casesType.charAt(0).toUpperCase()+casesType.slice(1),\" Report\"]}),/*#__PURE__*/_jsx(LineGraph,{casesType:casesType,countryCode:country})]})]})})]});};export default App;","map":{"version":3,"sources":["C:/Users/peter/Desktop/lfz/covid_tracker/src/App.js"],"names":["React","useState","useEffect","FormControl","Select","MenuItem","Card","CardContent","sortData","prettyPrintStat","numeral","InfoBox","LineGraph","Map","Table","App","countries","setCountries","country","setCountry","countryInfo","setCountryInfo","tableData","setTableData","center","setCenter","zoom","setZoom","mapCountries","setMapCountries","casesType","setCasesType","fetch","then","res","json","data","getCountriesData","apiCountries","map","c","name","value","iso2","sortedData","onCountryChange","event","countryCode","target","url","lat","long","v","i","e","todayCases","cases","format","todayRecovered","recovered","todayDeaths","deaths","charAt","toUpperCase","slice"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { FormControl, Select, MenuItem, Card, CardContent } from '@material-ui/core';\nimport { sortData, prettyPrintStat } from \"./Components/utilies\";\nimport numeral from \"numeral\";\nimport InfoBox from \"./Components/InfoBox/InfoBox\";\nimport LineGraph from \"./Components/LineGraph\";\nimport Map from \"./Components/CovidMap/CovidMap\";\nimport Table from \"./Components/Table/Table\";\nimport \"leaflet/dist/leaflet.css\";\nimport \"./index.css\";\nimport \"./Components/Table/Table.css\";\nimport \"./Components/Modal/Modal.css\"\n\n\nconst App = () => {\n\n  const [countries, setCountries] = useState([]);\n  const [country, setCountry] = useState(\"WorldWide\");\n  const [countryInfo, setCountryInfo] = useState([]);\n  const [tableData, setTableData] = useState([]);\n  const [center, setCenter] = useState([40.4, -3.7]);\n  const [zoom, setZoom] = useState(3);\n  const [mapCountries, setMapCountries] = useState([]);\n  const [casesType, setCasesType] = useState(`cases`);\n\n\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/all\")\n      .then((res) => res.json())\n      .then((data) => {\n        setCountryInfo(data);\n      })\n  }, []);\n\n  useEffect(() => {\n    const getCountriesData = async () => {\n      await fetch(\"http://disease.sh/v3/covid-19/countries\")\n        .then((res) => res.json())\n        .then((data) => {\n          const apiCountries = data.map((c) => (\n            {\n              name: c.country,\n              value: c.countryInfo.iso2\n            }\n          ))\n          const sortedData = sortData(data);\n          setTableData(sortedData);\n          setCountries(apiCountries);\n          setMapCountries(data);\n        })\n    }\n    getCountriesData();\n  }, []);\n\n  const onCountryChange = async (event) => {\n    const countryCode = event.target.value;\n    setCountry(countryCode);\n    const url = countryCode === \"WorldWide\"\n      ? `https://disease.sh/v3/covid-19/all`\n      : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n\n    await fetch(url)\n      .then(res => res.json())\n      .then(data => {\n        setCountry(countryCode);\n        setCountryInfo(data);\n        if (countryCode === \"WorldWide\") {\n          setZoom(3);\n          setCenter([40.4, -3.7]);\n        } else {\n          setZoom(8);\n          setCenter([data.countryInfo.lat, data.countryInfo.long]);\n\n        }\n      })\n  }\n  return (\n    <div className=\"App\">\n      <div className=\"left_app\">\n        <div className=\"app_header\">\n          <h1>Covid-19 Tracker</h1>\n          <FormControl className=\"app_dropdown\">\n            <Select variant=\"outlined\" value={country} onChange={onCountryChange}>\n              <MenuItem key={\"w\"} value=\"WorldWide\">WorldWide</MenuItem>\n              {\n                countries.map((v, i) => (\n                  <MenuItem key={i} value={v.value}>{v.name}</MenuItem>\n                ))\n              }\n\n            </Select>\n          </FormControl>\n        </div>\n        <div className=\"app_stats\">\n          <InfoBox\n            isRed\n            active={casesType === \"cases\"}\n            onClick={(e) => setCasesType('cases')}\n            title=\"Coronavirus Cases\" cases={prettyPrintStat(countryInfo.todayCases)} total={numeral(countryInfo.cases).format(0.0)} />\n          <InfoBox\n            active={casesType === \"recovered\"}\n            onClick={e => setCasesType('recovered')}\n            title=\"Recovered\" cases={prettyPrintStat(countryInfo.todayRecovered)} total={numeral(countryInfo.recovered).format(0.0)} />\n          <InfoBox\n            isRed\n            active={casesType === \"deaths\"}\n            onClick={e => setCasesType('deaths')}\n            title=\"Deaths\" cases={prettyPrintStat(countryInfo.todayDeaths)} total={numeral(countryInfo.deaths).format(0.0)} />\n        </div>\n        <div>\n          <Map\n            countries={mapCountries}\n            casesType={casesType}\n            center={center}\n            zoom={zoom}\n          />\n        </div>\n      </div>\n\n      <Card className=\"right_app\">\n        <CardContent>\n          <h3>Live Cases by Country</h3>\n          <div className=\"table\">\n            <Table countries={tableData} />\n          </div>\n          <div className=\"newCase\">\n            <h3>{country} {casesType.charAt(0).toUpperCase() + casesType.slice(1)} Report</h3>\n            <LineGraph casesType={casesType} countryCode={country} />\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}