{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/peter/Desktop/lfz/covid_tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/peter/Desktop/lfz/covid_tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:/Users/peter/Desktop/lfz/covid_tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{Line}from\"react-chartjs-2\";import numeral from\"numeral\";import Modal from\"./Modal/Modal\";import\"./Modal/Modal.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var options={legend:{display:false},elements:{point:{radius:0}},maintainAspectRatio:false,tooltips:{mode:\"index\",intersect:false,callbacks:{label:function label(tooltipItem,data){return numeral(tooltipItem.value).format(\"+0,0\");}}},scales:{xAxes:[{type:\"time\",time:{format:\"MM/DD/YY\",tooltipFormat:\"lll\"}}],yAxes:[{gridLines:{display:false},ticks:{callback:function callback(value,index,values){return numeral(value).format(\"0a\");}}}]}};function buildChartData(data,casesType){var chartData=[];var lastDataPoint;for(var date in data[casesType]){if(lastDataPoint){var newDataPoint={x:date,y:data[casesType][date]-lastDataPoint};chartData.push(newDataPoint);}lastDataPoint=data[casesType][date];};return chartData;}function LineGraph(_ref){var casesType=_ref.casesType,countryCode=_ref.countryCode;var _useState=useState({}),_useState2=_slicedToArray(_useState,2),data=_useState2[0],setData=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),showing=_useState4[0],SetShowing=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),APImessage=_useState6[0],SetAPImessage=_useState6[1];var lineUrl=countryCode===\"WorldWide\"?\"https://disease.sh/v3/covid-19/historical/all?lastdays=120    \":\"https://disease.sh/v3/covid-19/historical/\".concat(countryCode,\"?lastdays=120\");useEffect(function(){try{var fetchData=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(lineUrl).then(function(res){return res.json();}).then(function(data){if(!data.message){if(countryCode===\"WorldWide\"){var chartData=buildChartData(data,casesType);return setData(chartData);}else{var _chartData=buildChartData(data.timeline,casesType);return setData(_chartData);}}else{SetAPImessage(data.message);SetShowing(true);}}).catch(function(error){console.log(\"error: Country \".concat(countryCode,\" is not updated!\"));});case 2:case\"end\":return _context.stop();}}},_callee);}));return function fetchData(){return _ref2.apply(this,arguments);};}();fetchData();}catch(_unused){console.log(\"error: Country \".concat(countryCode,\" is not updated!\"));}},[casesType,lineUrl,countryCode]);function toggleElement(){SetShowing(false);}return/*#__PURE__*/_jsxs(\"div\",{children:[data.length>0&&/*#__PURE__*/_jsx(Line,{data:{datasets:[{data:data,backgroundColor:\"rgba(204,16,92,0.1)\",borderColor:\"#CC1034\"}]},options:options}),/*#__PURE__*/_jsx(Modal,{isShowing:showing,toggleElement:toggleElement,message:APImessage})]});}export default LineGraph;","map":{"version":3,"sources":["C:/Users/peter/Desktop/lfz/covid_tracker/src/Components/LineGraph.js"],"names":["React","useState","useEffect","Line","numeral","Modal","options","legend","display","elements","point","radius","maintainAspectRatio","tooltips","mode","intersect","callbacks","label","tooltipItem","data","value","format","scales","xAxes","type","time","tooltipFormat","yAxes","gridLines","ticks","callback","index","values","buildChartData","casesType","chartData","lastDataPoint","date","newDataPoint","x","y","push","LineGraph","countryCode","setData","showing","SetShowing","APImessage","SetAPImessage","lineUrl","fetchData","fetch","then","res","json","message","timeline","catch","error","console","log","toggleElement","length","datasets","backgroundColor","borderColor"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Line } from \"react-chartjs-2\";\nimport numeral from \"numeral\";\nimport Modal from \"./Modal/Modal\";\nimport \"./Modal/Modal.css\";\n\n\nconst options = {\n  legend: {\n    display: false,\n  },\n  elements: {\n    point: {\n      radius: 0,\n    },\n  },\n  maintainAspectRatio: false,\n  tooltips: {\n    mode: \"index\",\n    intersect: false,\n    callbacks: {\n      label: function (tooltipItem, data) {\n        return numeral(tooltipItem.value).format(\"+0,0\");\n      },\n    },\n  },\n  scales: {\n    xAxes: [\n      {\n        type: \"time\",\n        time: {\n          format: \"MM/DD/YY\",\n          tooltipFormat: \"lll\",\n        },\n      },\n    ],\n    yAxes: [\n      {\n        gridLines: {\n          display: false,\n        },\n        ticks: {\n          callback: function (value, index, values) {\n            return numeral(value).format(\"0a\");\n          },\n        },\n      },\n    ],\n  },\n};\n\nfunction buildChartData(data, casesType) {\n  let chartData = [];\n  let lastDataPoint;\n\n  for (let date in data[casesType]) {\n    if (lastDataPoint) {\n      let newDataPoint = {\n        x: date,\n        y: data[casesType][date] - lastDataPoint,\n      }\n      chartData.push(newDataPoint);\n    }\n    lastDataPoint = data[casesType][date];\n  };\n  return chartData;\n}\n\nfunction LineGraph({ casesType, countryCode }) {\n  const [data, setData] = useState({});\n  const [showing, SetShowing] = useState(false);\n  const [APImessage, SetAPImessage] = useState(\"\");\n\n  let lineUrl = countryCode === \"WorldWide\"\n    ? `https://disease.sh/v3/covid-19/historical/all?lastdays=120    `\n    : `https://disease.sh/v3/covid-19/historical/${countryCode}?lastdays=120`;\n\n  useEffect(() => {\n    try {\n      const fetchData = async () => {\n        await fetch(lineUrl)\n          .then(res => { return res.json() })\n          .then(data => {\n            if (!data.message) {\n              if (countryCode === \"WorldWide\") {\n                let chartData = buildChartData(data, casesType);\n                return setData(chartData);\n              } else {\n                let chartData = buildChartData(data.timeline, casesType);\n                return setData(chartData);\n              }\n            } else {\n              SetAPImessage(data.message);\n              SetShowing(true);\n            }\n\n          })\n          .catch(error => {\n            console.log(`error: Country ${countryCode} is not updated!`);\n          })\n      }\n      fetchData();\n    } catch{\n      console.log(`error: Country ${countryCode} is not updated!`);\n    }\n  }, [casesType, lineUrl, countryCode]);\n\n  function toggleElement() {\n    SetShowing(false);\n  }\n\n  return (\n    <div>\n      {data.length > 0 && (\n        <Line\n          data={\n            {\n              datasets: [\n                {\n                  data: data,\n                  backgroundColor: \"rgba(204,16,92,0.1)\",\n                  borderColor: \"#CC1034\",\n                }\n              ]\n            }\n          }\n          options={options}\n        />\n      )}\n      <Modal isShowing={showing} toggleElement={toggleElement} message={APImessage} />\n    </div>\n  )\n}\n\nexport default LineGraph\n\n\n"]},"metadata":{},"sourceType":"module"}